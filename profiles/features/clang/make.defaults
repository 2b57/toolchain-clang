# use Clang as a primary compiler
CC="clang"
CXX="clang++"

# this works with libtool
LD="ld.lld"

# linker flags
LDFLAGS="${LDFLAGS} -fuse-ld=lld -rtlib=compiler-rt -unwindlib=libunwind -Wl,--as-needed"

# hardening flags
SOME_HARDENING_FLAGS="-fPIC -fstack-protector-strong -D_FORTIFY_SOURCE=2"

# add some hardening by default
LDFLAGS="${LDFLAGS} -Wl,-z,relro,-z,now -pie"
CFLAGS="${CFLAGS} ${SOME_HARDENING_FLAGS}"
CXXFLAGS="${CXXFLAGS} ${SOME_HARDENING_FLAGS}"

# use LLVM-provided binutils
AR="llvm-ar"
AS="llvm-as"
NM="llvm-nm"
STRIP="llvm-strip"
RANLIB="llvm-ranlib"
OBJCOPY="llvm-objcopy"
STRINGS="llvm-strings"
OBJDUMP="llvm-objdump"
READELF="llvm-readelf"
ADDR2LINE="llvm-addr2line"

# curl needed by cmake
BOOTSTRAP_USE="$BOOTSTRAP_USE ssl curl_ssl_openssl"
